<?xml version="1.0" encoding="utf-8"?>
<policy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:archimate="http://www.bolton.ac.uk/archimate"
        name="Generated Policy">
   <objectClass name="objectClass" abstract="">
      <description>
         <documentation>The primary abstraction of the policy is the objectClass element.<br/>An objectClass describes a concept derived from either a builtin archimate element, or another objectClass: the ancestor of the objectClass.<br/>
            <br/>We can define the objectClass of an archimate element in one of the following ways:<br/>
            <br/>- add a property where the name is "objectClass" and the value is the name of the objectclass<br/>- add a property where the name is in the form &lt;class&gt;:&lt;property&gt;, where &lt;class&gt; is the name of the objectclass, and &lt;property&gt; is the name of one of the properties of the objectclass. The value vill be the value of the objectClass property.<br/>- create a Group in a view, with the property named "associatedObjectClass". The value of the property should be the name of the objectClass. All the elements within the group (including the nested ones) will belong to the objectClass<br/>
            <br/>The policy related to the objectclass will help to check the model for structure and content, and also makes creating reports and generating configurations easier.<br/>One of the examples of this is that the policy for this model can be generated from this model, and the generated policy can be used to check that this model is indeed conforms to the policy which is generated from it :)<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <property name="parent"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="true">
         <description>
            <documentation>The ancestor of the objectClass.<br/>The objectclass have all the properties of its non-builtin ancestors.<br/>
               <br/>The ancestor is represented by a tag named 'ancestor' having an attribute named 'class' with the value of the ancestor class name in the policy file.<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//objectClass[@parentid=//archimate:SpecialisationRelationship[@target=$id]/@source]/../@name|//ArchimateObjectClass[@parentid=//archimate:SpecialisationRelationship[@target=$id]/@source]/../@name"
                  multi="true">
            <description/>
         </default>
      </property>
      <property name="abstract"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="">
         <description>
            <documentation>If "true", the objectClass is merely used for the purpose of instantiating properties for other objectclasses. It should not be directly instantiated in a model.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
               <br/>FIXME: check for this is not implemented yet.<br/>
            </documentation>
         </description>
      </property>
      <property name="attrib"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="true">
         <description>
            <documentation>The id of an attribute belonging to the objectClass<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//attribute[@parentid=//archimate:CompositionRelationship[@source=$id]/@target]/@parentid"
                  multi="true">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="attribute" abstract="">
      <description>
         <documentation>The attribute is used to describe a attribute of an objectClass.<br/>You can define a attribute value either by giving the value to a property named &lt;b&gt;classname&lt;/b&gt;:&lt;b&gt;attributename&lt;/b&gt; to an object, or by using a model structure defined by the defaults of the given attribute.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <property name="type"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The type of the property.<br/>It will be used when an xsd is generated from the policy.<br/>The xsd in turn will be used to check the values given.<br/>
               <br/>The property is represented by the attribute named 'type' in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="minOccurs"
                type="xs:string"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>How much time the property should be occur minimally in the objectClass.<br/>If no such property, then the value is deemed to be 1.<br/>It will be used when an xsd is generated from the policy.<br/>The xsd in turn will be used to check the values given.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="maxOccurs"
                type="xs:string"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>How much time the property should be occur maximally in the objectClass.<br/>If no such property, then there is no limit.<br/>It will be used when an xsd is generated from the policy.<br/>The xsd in turn will be used to check the values given.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="structural"
                type="xs:string"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>If the value of this property is "true", then the property is structural:<br/>The value will be generated by a default associated to it, and it is an error to enter the value into the model through some properties.<br/>
               <br/>FIXME: this check is not implemented yet.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="def"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="">
         <description>
            <documentation>The id of a default related to the attribute.<br/>
               <br/>The property is represented by a tag named 'type' in the policy file.<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//default[@parentid=//archimate:CompositionRelationship[@source=$id]/@target]/@parentid"
                  multi="true">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="default" abstract="">
      <description>
         <documentation>The default is used to describe how a property will get its default value if we have not given anything.<br/>It is useful to<br/>- describe and enforce structural relationships within the model<br/>- give default value to a property<br/>
            <br/>This attribute should be entered as a property.<br/>
         </documentation>
      </description>
      <ancestor class="archimate:DataObject"/>
      <property name="description"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The description of the default.<br/>
               <br/>Ideally it describes how to give a value to the property through model structure, or what is the default value of the property, and why it is so.<br/>
               <br/>
               <br/>The description is represented by the tag named 'description' in the policy file.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name | ../documentation" multi="">
            <description>
               <documentation>By convention the 'how' and 'what' are described in the archimate element name, and the 'why' in its documentation.<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="order"
                type="xs:nonnegativeinteger"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The order in which the defaults are evaluated.<br/>The default evaluation goes in the following way:<br/>1. i:=0<br/>2. if there is a default with order i, then try it. else stop.<br/>3. if the default gave back a value, then stop.<br/>4. i:= i+1<br/>5. continue from 2.<br/>
               <br/>Beware: if defaults are not numbered sequentially from zero, then some of them might not be tried.<br/>The reason of this behaviour that the sequence of getting the attributes from the policy programatically is not guaranteed to be the same as they are described there.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="select"
                type="xs:string"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The xpath expression to be evaluated to get the value of the property.<br/>If multi="true", then the result should be a nodeset, else a string.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>
            </documentation>
         </description>
      </property>
      <property name="multi"
                type="xs:string"
                minOccurs="0"
                maxOccurs="1"
                structural="">
         <description>
            <documentation>Whether the select will return multiple values.<br/>If set to "true", then for each item in the nodelist returned by the select, a different property will be generated.<br/>
               <br/>The property is represented by the attribute with the same name in the policy file.<br/>FIXME: there should be a "type" attribute instead, defaulting to string, with the following possible values:<br/>string: default functionality<br/>multi: multi="true"<br/>structured: works like xsl:copy-of<br/>
            </documentation>
         </description>
      </property>
   </objectClass>
   <objectClass name="ArchimateObjectClass" abstract="">
      <description>
         <documentation>An objectclass predefined by Archi.<br/>This does not show up in the policy file explicitly. Used to have a starting point to generate/document the objectClass hierarchy.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <ancestor class="archimate:DataObject"/>
   </objectClass>
   <objectClass name="abstractNamed" abstract="true">
      <description>
         <documentation>This is an abstract class, so we don't need to define the name and description property for all objectClasses.<br/>
         </documentation>
         <p>This is an abstract class, do not instantiate it in a model</p>
      </description>
      <ancestor class="archimate:DataObject"/>
      <property name="description"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The description of the objectClass.<br/>
               <br/>The description is represented by the tag named 'description' in the policy file.<br/>
            </documentation>
         </description>
         <default order="0" select="../documentation" multi="">
            <description/>
         </default>
      </property>
      <property name="name"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>name of the objectClass<br/>
               <br/>The name is represented by an attribute named 'name' of the objectClass in the policy file.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="report" abstract="">
      <description>
         <documentation>folder properties to parameterize reports<br/>
         </documentation>
      </description>
      <ancestor class="archimate:Folder"/>
      <ancestor class="archimate:model"/>
      <property name="part"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>The name of the report part for which this folder should be displayed<br/>
            </documentation>
         </description>
      </property>
   </objectClass>
   <objectClass name="DocumentVersion" abstract="">
      <description>
         <documentation>A Document version.<br/>
         </documentation>
      </description>
      <ancestor class="archimate:Product"/>
      <ancestor class="archimate:Plateau"/>
      <property name="releasedate"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="">
         <description>
            <documentation>The release date of the document version<br/>
            </documentation>
         </description>
      </property>
      <property name="versionnumber"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="">
         <description>
            <documentation>The version number of the document version<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="">
            <description/>
         </default>
      </property>
      <property name="authorid"
                type="xs:string"
                minOccurs="0"
                maxOccurs=""
                structural="">
         <description>
            <documentation>The id of the author<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//*[@parentid=//archimate:RealisationRelationship[@target='c400f4ad']/@source]/@parentid"
                  multi="">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="GovernanceStep" abstract="">
      <description>
         <documentation>A governance process step.<br/>It is used to describe the related actors by the documentcontrol style.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <ancestor class="archimate:BusinessEvent"/>
      <ancestor class="archimate:BusinessProcess"/>
      <property name="state"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>The state of the step<br/>
            </documentation>
         </description>
         <default order="0" select="'not started'" multi="">
            <description/>
         </default>
      </property>
      <property name="actor"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>An actor involved in the step.<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:UsedByRelationship[@target=$id]/@source"
                  multi="true">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="OrganisationalUnit" abstract="">
      <description>
         <documentation>An organisational unit.<br/>
         </documentation>
      </description>
      <ancestor class="archimate:BusinessCollaboration"/>
      <property name="description"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The description of the objectClass.<br/>
               <br/>The description is represented by the tag named 'description' in the policy file.<br/>
            </documentation>
         </description>
         <default order="0" select="../documentation" multi="">
            <description/>
         </default>
      </property>
   </objectClass>
   <objectClass name="OrganisationalPerson" abstract="">
      <description>
         <documentation>A person belonging to an organisation<br/>
         </documentation>
      </description>
      <ancestor class="archimate:BusinessActor"/>
      <property name="name"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>name of the objectClass<br/>
               <br/>The name is represented by an attribute named 'name' of the objectClass in the policy file.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="">
            <description/>
         </default>
      </property>
      <property name="position"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>position of the person<br/>
               <br/>FIXME: should have a default which computes it by the composition relation with the organisation (property or line text), because it should actually change by organisation for the same person.<br/>
            </documentation>
         </description>
      </property>
      <property name="organisation"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The (primary) organisation of the person.<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalUnit[@parentid=//archimate:CompositionRelationship[@target=$id and ./property/@value='primary']/@source]/../@name"
                  multi="">
            <description>
               <documentation>When the person belongs to more organisational units, one of them should be the primary one.<br/>It is designated by a property added to the composition relationship.<br/>
               </documentation>
            </description>
         </default>
         <default order="1"
                  select="//OrganisationalUnit[@parentid=//archimate:CompositionRelationship[@target=$id]/@source]/../@name"
                  multi="true">
            <description>
               <documentation>When the person belongs to one organisational unit, then this organisational unit is its primary organisation.<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="memberOf"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>The organisations of the person.<br/>
               <br/>FIXME: all Business Collaborations and Business Roles should have been listed here<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalUnit[@parentid=//archimate:CompositionRelationship[@target=$id]/@source]/../@name"
                  multi="true">
            <description>
               <documentation>All the organisational units which contain the person.<br/>
               </documentation>
            </description>
         </default>
      </property>
   </objectClass>
   <objectClass name="Application" abstract="">
      <description>
         <documentation>An application or system.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <ancestor class="archimate:ApplicationComponent"/>
      <property name="admContact"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>Name of person<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalPerson[@parentid=//archimate:UsedByRelationship[@source=$id and @name='manages']/@target]/name"
                  multi="true">
            <description>
               <documentation>An OrganisationalPerson which uses the Server with line text "manages"<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="technicalContact"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>Name of person<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalPerson[@parentid=//archimate:UsedByRelationship[@source=$id and @name='operates']/@target]/name"
                  multi="true">
            <description>
               <documentation>An OrganisationalPerson which uses the Server with line text "operates"<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="shortName"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The name of the stuff.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="true">
            <description>
               <documentation>Name<br/>
               </documentation>
            </description>
         </default>
      </property>
   </objectClass>
   <objectClass name="ApplicationCollection" abstract="">
      <description>
         <documentation>A collection of applications/systems that belong together eg. Salary payment.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <ancestor class="archimate:ApplicationComponent"/>
      <property name="admContact"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>Name of person<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalPerson[@parentid=//archimate:UsedByRelationship[@source=$id and @name='manages']/@target]/name"
                  multi="true">
            <description>
               <documentation>An OrganisationalPerson which uses the Server with line text "manages"<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="shortName"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The name of the stuff.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="true">
            <description>
               <documentation>Name<br/>
               </documentation>
            </description>
         </default>
      </property>
   </objectClass>
   <objectClass name="Server" abstract="">
      <description>
         <documentation>A server with an operating system, running on a physical or virtual hardware.<br/>
         </documentation>
      </description>
      <ancestor class="abstractNamed"/>
      <ancestor class="archimate:Node"/>
      <property name="ipAddress"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>The IP address.<br/>
            </documentation>
         </description>
      </property>
      <property name="lifeCycleStatus"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>one of In preparation, In Test, In production, Under liquidation, Liquidated<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:Plateau[@id=//archimate:AggregationRelationship[@target=$id]/@source]/@name"
                  multi="true">
            <description>
               <documentation>A Plateau which aggregates the server<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="location"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>where the PhysicalHardware is placed<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:Location[@id=//archimate:AssignmentRelationship[@target=$id]/@source]/@name"
                  multi="true">
            <description>
               <documentation>A Location assigned to the application<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="networkZone"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>what network zone the server is placed in?<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:Network[@id=//archimate:AssociationRelationship[@source=$id]/@target]/@name"
                  multi="true">
            <description>
               <documentation>A Network this Server is associated to<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="operatingSystem"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>what OS it runs?<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:SystemSoftware[@id=//archimate:CompositionRelationship[@source=$id]/@target]/@name"
                  multi="true">
            <description>
               <documentation>A System Software which have a composition from this Server<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="physicalHardware"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>eg the physical server<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:Node[@id=//archimate:CompositionRelationship[@target=$id]/@source]/@name"
                  multi="true">
            <description>
               <documentation>Another Server which is composed of this one<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="serverRole"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>e.g. Application server, File Server…<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//archimate:ApplicationFunction[@id=//archimate:RealisationRelationship[@source=$id]/@target]/@name"
                  multi="true">
            <description>
               <documentation>An application function this server realizes<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="technicalContact"
                type="xs:string"
                minOccurs=""
                maxOccurs=""
                structural="">
         <description>
            <documentation>Name of person<br/>
            </documentation>
         </description>
         <default order="0"
                  select="//OrganisationalPerson[@parentid=//archimate:UsedByRelationship[@source=$id and @name='operates']/@target]/name"
                  multi="true">
            <description>
               <documentation>An OrganisationalPerson which uses the Server with line text "operates"<br/>
               </documentation>
            </description>
         </default>
      </property>
      <property name="shortName"
                type="xs:string"
                minOccurs=""
                maxOccurs="1"
                structural="">
         <description>
            <documentation>The name of the stuff.<br/>
            </documentation>
         </description>
         <default order="0" select="../@name" multi="true">
            <description>
               <documentation>Name<br/>
               </documentation>
            </description>
         </default>
      </property>
   </objectClass>
</policy>
